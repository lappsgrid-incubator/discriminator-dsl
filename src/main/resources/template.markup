/*
 * This is a Groovy MarkupBuilder DSL file.  See the MarkupBuilder
 *  documentation for more details.
 */

html {
    head {
        title "LAPPS Discriminators URI"
        link rel:'stylesheet', type:'text/css', href:'lappsstyle.css'
    }
    body {
        div(id:'container') {
            div(id:'intro') {
                div(id:'pageHeader') {
                    h1 'LAPPS Web Service URI Inventory'
                    h3 '(aka Discriminators)'
                }
            }
            div(id:'mainContent') {
                h1 "LAPPS Discriminators"
                p """The LAPPS Web Service URI Inventory is a list of the URI
                    used in LAPPS web services.  Services deployed to a LAPPS node may
                    use other URI, but these is a complete list of the URI used by
                    the LAPPS infrastructure.
                """
                p """The URI fall into one of three conceptual categories"""
                ol {
                    li """URI from the LAPPS Web Service Exchange Vocabulary.
                        These are the URI used as annotations types by LAPPS
                        web services.  For example, http://vocab.lappsgrid.org/Token.
                    """
                    li """URI used in the LIF (LAPPS Interchange Format). This is
                        the JSON-LD format exchanges by LAPPS web services.
                    """
                    li """URI used as commands and return codes used by LAPPS web services.
                    """
                }

                table {
                    tr {
                        th 'ID'
                        th 'Short name'
                        th 'URI / Media-Type'
                    }
                    discriminators.each { type ->
                        tr {
                            td type.id
                            td {
                                a(name:"top.${type.name}")
                                a(href:"#${type.name}", type.name)
                            }
                            td {
                                if (type.uri.startsWith('http://vocab.lappsgrid.org')) {
                                    a href:type.uri, type.uri
                                }
                                else {
                                    span type.uri
                                }
                            }
                        }
                    }
                }
                h1 'Descriptions'
                p 'These descriptions need work...'
                discriminators.each { type ->
                    a(name:type.name)
                    h2 type.name
                    table {
                        tr {
                            th width:'10%', "ID"
                            td type.id
                        }
                        tr {
                            th "URI"
                            if (type.uri.startsWith('http://vocab.lappsgrid.org')) {
                                td {
                                    a href:type.uri, type.uri
                                }
                            }
                            else {
                                td type.uri
                            }
                        }
                        tr {
                            td(colspan:2, type.description)
                        }
                    }
                    if (type.ancestors.size() > 0) {
                        div(class:'ancestors') {
                            h3 'Ancestors'
                            ul {
                                type.ancestors.each { parent ->
                                    li {
                                        def link = parent.toString()
                                        a(href:"#${link}", link)
                                    }
                               }
                            }
                        }
                    }
                    p(class:'back') {
                        a href:"#top.${type.name}", 'Back'
                    }
                }
            }
        }
    }
}
    /*
    body(id:'container') {
        div(id:'main') {
            h1 "LAPPS Discriminators"
            discriminators.each { type ->
                h2 type.name
                table {
                    tr {
                        th "ID"
                        td type.id
                    }
                    tr {
                        th "URI"
                        td type.uri
                    }
                    tr {
                        td(colspan:2, type.description)
                    }
                }
                if (type.parents.size() > 0) {
                    h3 "Ancestors"
                    ul {
                        type.parents.each { parent ->
                            li parent.toString()
                       }
                    }
                }
            }
        }
    }
}
*/